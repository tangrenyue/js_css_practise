 /*
 给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串，判断字符串是否有效。
有效字符串需满足：
    1.左括号必须用相同类型的右括号闭合。
    2.左括号必须以正确的顺序闭合。
    注意空字符串可被认为是有效字符串。

思路:
    S1：遍历输入的括号序列，如果是左括号，进入S2，如果是右括号，进入S3
    S2：如果当前遍历到左括号，则入栈
    S3：如果当前遍历到右括号，则出栈一个元素，看其是否与当前的右括号组成一对，如果不是，则匹配失败。或者在出栈过程中发生异常(从空栈中出栈)，也匹配失败
    S4：若能顺利遍历完成，检查栈中是否还有剩余元素，如果有，则匹配失败；如果没有，则匹配成功。
*/

 /*
  * @param {string} s
  * @return {boolean}
  */
 var isValid = function (s) {
     if (s.length % 2 === 1) return false;

     const stack = [];
     const obj = {
         "]": "[",
         "}": "{",
         ")": "(",
     };
     // 取出字符串中的括号
     for (let i = 0; i < s.length; i++) {
         // 如果是左括号，进栈
         let c = s[i];
         if (c === '(' || c === '{' || c === '[') {
             stack.push(c);
         } else {
             let t = stack.pop();
             if (t !== obj[c]) {
                 return false;
             }
         }
     }

     return stack.length === 0;
 };